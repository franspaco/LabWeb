{"version":3,"sources":["NavBar.jsx","Chart.jsx","Root.js","muiTheme.js","App.js","serviceWorker.js","index.js","img/chart.jpg"],"names":["ProjectsDialog","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","index_es","open","onClose","List_default","ListItem_default","button","key","ListItemIcon_default","ListItemText_default","primary","Component","ButtonAppBar","_this","state","drawer","dialog","forceVal","arguments","length","undefined","setState","console","log","toggleDrawer","_this2","classes","sideList","Typography_default","variant","className","list_title","teamName","onClick","toggleDialog","Divider_default","root","AppBar_default","position","Toolbar_default","IconButton_default","menuButton","color","aria-label","Menu_default","grow","title","Button_default","Drawer_default","anchor","NavBar_ProjectsDialog","withStyles","flexGrow","marginLeft","marginRight","icon","margin","Chart","style","maxWidth","marginTop","src","chartImg","alt","width","Root","NavBar","src_Chart","theme","createMuiTheme","palette","deepOrange","secondary","red","status","danger","App","styles","src_Root","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"mfAwCMA,cACF,SAAAA,EAAYC,GAAQ,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KACVH,0EAIN,OACIO,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,KAAMR,KAAKH,MAAMW,KAAMC,QAAST,KAAKH,MAAMY,SAC/CL,EAAAC,EAAAC,cAACI,EAAAL,EAAD,KACID,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAUO,QAAM,EAACC,IAAI,aACjBT,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,KACID,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,KAAcD,EAAAC,EAAAC,cAACC,EAAA,EAAD,eACdH,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CAAcW,QAAQ,yBAG9BZ,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAUO,QAAM,EAACC,IAAI,qBACjBT,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,KACID,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,KAAcD,EAAAC,EAAAC,cAACC,EAAA,EAAD,kBACdH,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CAAcW,QAAQ,uBAG9BZ,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAUO,QAAM,EAACC,IAAI,mBACjBT,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,KACID,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,KAAcD,EAAAC,EAAAC,cAACC,EAAA,EAAD,gBACdH,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CAAcW,QAAQ,6BAxBrBC,aAiCvBC,cACF,SAAAA,EAAYrB,GAAO,IAAAsB,EAAA,OAAArB,OAAAC,EAAA,EAAAD,CAAAE,KAAAkB,IACfC,EAAArB,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoB,GAAAf,KAAAH,KAAMH,KACDuB,MAAQ,CACTC,QAAQ,EACRC,QAAQ,GAJGH,8EAQU,IAAhBI,EAAgBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAL,KACpBxB,KAAK2B,SAAS,CACVN,OAAsB,OAAbE,GAAqBvB,KAAKoB,MAAMC,OAASE,2CAI5B,IAAjBA,EAAiBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAN,KACpBxB,KAAK2B,SAAS,CACVL,OAAsB,OAAbC,GAAsBvB,KAAKoB,MAAME,OAASC,IAEvDK,QAAQC,IAAI7B,KAAKoB,MAAME,QACnBtB,KAAKoB,MAAME,QACXtB,KAAK8B,cAAa,oCAIlB,IAAAC,EAAA/B,KACIgC,EAAYhC,KAAKH,MAAjBmC,QACFC,EACF7B,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC4B,EAAA7B,EAAD,CAAY8B,QAAQ,KAAKC,UAAWJ,EAAQK,YACvCrC,KAAKH,MAAMyC,UAEhBlC,EAAAC,EAAAC,cAACI,EAAAL,EAAD,KACID,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAUO,QAAM,EAACC,IAAI,YAAY0B,QAAS,kBAAIR,EAAKS,cAAa,KAC5DpC,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,KACID,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,KAAcD,EAAAC,EAAAC,cAACC,EAAA,EAAD,eACdH,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CAAcW,QAAQ,yBAG9BZ,EAAAC,EAAAC,cAACmC,EAAApC,EAAD,MACAD,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAUO,QAAM,EAACC,IAAI,qBACjBT,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,KACID,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,KAAcD,EAAAC,EAAAC,cAACC,EAAA,EAAD,kBACdH,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CAAcW,QAAQ,uBAG9BZ,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAUO,QAAM,EAACC,IAAI,kBAAkB0B,QAAS,kBAAMR,EAAKS,cAAa,KACpEpC,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,KACID,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,KAAcD,EAAAC,EAAAC,cAACC,EAAA,EAAD,gBACdH,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CAAcW,QAAQ,sBAO1C,OACIZ,EAAAC,EAAAC,cAAA,OAAK8B,UAAWJ,EAAQU,MACpBtC,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAQuC,SAAS,UACbxC,EAAAC,EAAAC,cAACuC,EAAAxC,EAAD,KACID,EAAAC,EAAAC,cAACwC,EAAAzC,EAAD,CAAY+B,UAAWJ,EAAQe,WAAYC,MAAM,UAAUC,aAAW,OAAOV,QAAS,kBAAMR,EAAKD,iBAC7F1B,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAD,OAEJD,EAAAC,EAAAC,cAAC4B,EAAA7B,EAAD,CAAY8B,QAAQ,QAAQa,MAAM,UAAUZ,UAAWJ,EAAQmB,MAC1DnD,KAAKH,MAAMuD,OAEhBhD,EAAAC,EAAAC,cAAC+C,EAAAhD,EAAD,CAAQ2C,MAAM,WAAd,WAGR5C,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,CAAQkD,OAAO,OAAO/C,KAAMR,KAAKoB,MAAMC,OAAQZ,QAAS,kBAAMsB,EAAKD,cAAa,KAC3EG,GAEL7B,EAAAC,EAAAC,cAACkD,EAAD,CAAgBhD,KAAMR,KAAKoB,MAAME,OAAQb,QAAS,kBAAIsB,EAAKS,cAAa,cAxE7DvB,aA8EZwC,uBAlIA,CACXf,KAAM,CACFgB,SAAU,GAEdP,KAAM,CACFO,SAAU,GAEdX,WAAY,CACRY,YAAa,GACbC,YAAa,IAEjBC,KAAM,CACFC,OAAQ,GAEZzB,WAAY,CACRsB,WAAY,KAmHLF,CAAmBvC,oBC3GnB6C,GAxCW9C,wBAatB,SAAA8C,EAAYlE,GAAQ,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+D,GAAAjE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiE,GAAA5D,KAAAH,KACVH,uHASN,OACIO,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAK0D,MAAO,CACRL,WAAY,OACZC,YAAa,OACbK,SAAU,MACVC,UAAW,KAEX9D,EAAAC,EAAAC,cAAA,OAAK6D,IAAKC,IAAUC,IAAI,GAAGL,MAAO,CAC9BM,MAAO,mBApBXrD,cCELsD,mLATP,OACInE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACkE,EAAD,CAAQpB,MAAM,MAAMd,SAAS,gBAC7BlC,EAAAC,EAAAC,cAACmE,EAAD,cALGxD,+CCSJyD,EAVDC,yBAAe,CACzBC,QAAS,CACL5D,QAAS6D,IACTC,UAAWC,KAEfC,OAAQ,CACJC,OAAQ,YCQDC,mLARP,OACI9E,EAAAC,EAAAC,cAAC6E,EAAA,iBAAD,CAAkBT,MAAOA,GACrBtE,EAAAC,EAAAC,cAAC8E,EAAD,cAJEnE,aCEEoE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOvF,EAAAC,EAAAC,cAACsF,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,mCEnInBC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.aee35fb9.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { Icon, Dialog } from '@material-ui/core';\r\n\r\nconst styles = {\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginLeft: -12,\r\n        marginRight: 20,\r\n    },\r\n    icon: {\r\n        margin: 5\r\n    },\r\n    list_title: {\r\n        marginLeft: 15\r\n    }\r\n};\r\n\r\nclass ProjectsDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog open={this.props.open} onClose={this.props.onClose}>\r\n                <List>\r\n                    <ListItem button key=\"join_link\">\r\n                        <ListItemIcon>\r\n                            <ListItemIcon><Icon>share</Icon></ListItemIcon>\r\n                            <ListItemText primary=\"Get Team Join Link\" />\r\n                        </ListItemIcon>\r\n                    </ListItem>\r\n                    <ListItem button key=\"projects_schedule\">\r\n                        <ListItemIcon>\r\n                            <ListItemIcon><Icon>schedule</Icon></ListItemIcon>\r\n                            <ListItemText primary=\"Edit My Schedule\" />\r\n                        </ListItemIcon>\r\n                    </ListItem>\r\n                    <ListItem button key=\"projects_button\">\r\n                        <ListItemIcon>\r\n                            <ListItemIcon><Icon>folder</Icon></ListItemIcon>\r\n                            <ListItemText primary=\"View Projects\" />\r\n                        </ListItemIcon>\r\n                    </ListItem>\r\n                </List>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nclass ButtonAppBar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            drawer: false,\r\n            dialog: false\r\n        };\r\n    }\r\n\r\n    toggleDrawer(forceVal = null){\r\n        this.setState({\r\n            drawer: (forceVal === null)? !this.state.drawer : forceVal\r\n        });\r\n    }\r\n\r\n    toggleDialog(forceVal = null) {\r\n        this.setState({\r\n            dialog: (forceVal === null) ? !this.state.dialog : forceVal\r\n        });\r\n        console.log(this.state.dialog);\r\n        if (this.state.dialog){\r\n            this.toggleDrawer(false);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n        const sideList = (\r\n            <div>\r\n                <Typography variant=\"h6\" className={classes.list_title}>\r\n                    {this.props.teamName}\r\n                </Typography>\r\n                <List>\r\n                    <ListItem button key=\"join_link\" onClick={()=>this.toggleDialog(true)}>\r\n                        <ListItemIcon>\r\n                            <ListItemIcon><Icon>share</Icon></ListItemIcon>\r\n                            <ListItemText primary=\"Get Team Join Link\"/>\r\n                        </ListItemIcon>\r\n                    </ListItem>\r\n                    <Divider/>\r\n                    <ListItem button key=\"projects_schedule\">\r\n                        <ListItemIcon>\r\n                            <ListItemIcon><Icon>schedule</Icon></ListItemIcon>\r\n                            <ListItemText primary=\"Edit My Schedule\" />\r\n                        </ListItemIcon>\r\n                    </ListItem>\r\n                    <ListItem button key=\"projects_button\" onClick={() => this.toggleDialog(true)} >\r\n                        <ListItemIcon>\r\n                            <ListItemIcon><Icon>folder</Icon></ListItemIcon>\r\n                            <ListItemText primary=\"View Projects\" />\r\n                        </ListItemIcon>\r\n                    </ListItem>\r\n                </List>\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\" onClick={() => this.toggleDrawer()}>\r\n                            <MenuIcon/>\r\n                        </IconButton>\r\n                        <Typography variant=\"title\" color=\"inherit\" className={classes.grow}>\r\n                            {this.props.title}\r\n                        </Typography>\r\n                        <Button color=\"inherit\">Login</Button>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Drawer anchor=\"left\" open={this.state.drawer} onClose={() => this.toggleDrawer(false)}>\r\n                    {sideList}\r\n                </Drawer>\r\n                <ProjectsDialog open={this.state.dialog} onClose={()=>this.toggleDialog(false)}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(ButtonAppBar);","import React, { Component } from \"react\";\r\n\r\nimport chartImg from './img/chart.jpg';\r\n\r\nclass ReactIgnore extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n    render() {\r\n        return React.Children.only(this.props.children);\r\n    }\r\n}\r\n\r\nclass Chart extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div style={{\r\n                    marginLeft: 'auto',\r\n                    marginRight: 'auto',\r\n                    maxWidth: '90%',\r\n                    marginTop: 50\r\n                }}>\r\n                    <img src={chartImg} alt=\"\" style={{\r\n                        width: '100%'\r\n                    }}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Chart;\r\n","import React, { Component } from 'react';\r\n\r\nimport NavBar from './NavBar';\r\n\r\nimport Chart from './Chart';\r\nimport { Divider } from '@material-ui/core';\r\n\r\nclass Root extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <NavBar title=\"App\" teamName=\"Sample Team\" />\r\n                <Chart />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Root;","\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nimport deepOrange from '@material-ui/core/colors/deepOrange';\r\nimport red from '@material-ui/core/colors/red';\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: deepOrange,\r\n        secondary: red,\r\n    },\r\n    status: {\r\n        danger: 'orange',\r\n    },\r\n});\r\n\r\nexport default theme;","import React, { Component } from 'react';\n\nimport { MuiThemeProvider } from '@material-ui/core/styles';\n\nimport './App.css';\n\nimport Root from './Root';\nimport theme from './muiTheme';\n\n\nclass App extends Component {\n    render() {\n        return (\n            <MuiThemeProvider theme={theme}>\n                <Root />\n            </MuiThemeProvider>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/chart.2ffc92c8.jpg\";"],"sourceRoot":""}